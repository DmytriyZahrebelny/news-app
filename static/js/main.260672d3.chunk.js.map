{"version":3,"sources":["reportWebVitals.js","store/posts/constants.js","api/api.constants.js","api/api.js","store/posts/actions.js","store/posts/reducer.js","store/posts/selectors.js","components/Header/useHeaderStyles.js","app.constants.js","store/auth/constants.js","store/auth/reducer.js","store/auth/selectors.js","components/Header/Header.js","components/PostLink/usePostLinkStyles.js","components/PostLink/PostLink.js","views/NewsList/useNewsListStyles.js","views/NewsList/NewsList.js","components/FormField/useFormFieldStyles.js","components/FormField/FormField.js","views/Auth/useAuthStyles.js","mocks/index.js","views/Auth/useAuth.js","store/auth/action.js","views/Auth/Auth.js","views/Post/usePostStyles.js","views/Post/Post.js","views/Profile/useProfileStyles.js","views/Profile/Profile.js","components/FormTextarea/useFormTextareaStyles.js","components/FormTextarea/FormTextarea.js","views/Editor/useEditor.js","views/Editor/useEditorStyles.js","views/Editor/Editor.js","useAppStyles.js","App.js","store/reducer.js","store/root-saga.js","store/store.js","theme/theme.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","moduleName","GET_ALL_POSTS","GET_POST","ALL_POSTS_REQUESTS","POST_REQUESTS","ENDPOINT_MAP","axiosInstance","axios","create","baseURL","getAllPosts","get","getPost","id","creatPost","data","post","headers","getAllPostsSaga","getPostSaga","postsSaga","getAllPostsAction","type","getPostAction","payload","call","posts","put","all","takeEvery","initialState","loadding","postsSelector","state","postSelector","postLoaddingSelector","useHeaderStyles","makeStyles","theme","header","backgroundColor","colors","lightsalmon","headerContainer","width","height","margin","display","alignItems","justifyContent","link","color","black","textDecoration","user","border","borderRadius","linkContainer","ROUTS","AUTH","isAuth","authSelector","Header","classes","useSelector","className","to","Typography","variant","useProstLinkStyles","padding","PostLink","title","url","useNewsListStyles","newsList","NewsList","map","useFormFieldStyles","root","FormField","name","label","value","inputRef","TextField","defaultValue","useAuthStyles","auth","authContainer","boxShadow","mainShadow","boxSizing","form","flexWrap","alignContent","button","cursor","error","textAlign","brown","authMock","useAuth","dispatch","useDispatch","useState","setError","history","useHistory","onSubmit","password","push","Auth","useForm","register","handleSubmit","required","usePostStyles","Post","useParams","isLoadding","useEffect","body","useProfileStyles","profile","white","Profile","useFormTextareaStyles","textarea","FormTextarea","placeholder","ref","useEditor","Number","a","userId","isUpdate","Boolean","deletePostHandler","delete","deletePost","useEditorStyles","Editor","onClick","useAppStyles","main","App","path","component","combineReducers","postsModule","action","authModule","rootSaga","createMuiTheme","crimson","lime","green","aqua","lightseagreen","mediumblue","slateblue","fuchsia","deeppink","chocolate","lightgray","gainsboro","ReactDOM","render","store","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","createStore","reducer","run","initStore","ThemeProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.260672d3.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const moduleName = 'posts';\n\nexport const GET_ALL_POSTS = `${moduleName}/GET_ALL_POSTS`;\nexport const GET_POST = `${moduleName}/GET_POST`;\nexport const ALL_POSTS_REQUESTS = `${moduleName}/ALL_POSTS_REQUESTS`;\nexport const POST_REQUESTS = `${moduleName}/POST_REQUESTS`;\n","export const BASE_URL = 'http://jsonplaceholder.typicode.com';\n\nexport const ENDPOINT_MAP = {\n  posts: '/posts',\n};\n","import axios from 'axios';\n\nimport { BASE_URL, ENDPOINT_MAP } from './api.constants';\n\nexport const axiosInstance = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const getAllPosts = () => axiosInstance.get(ENDPOINT_MAP.posts);\nexport const getPost = (id) => axiosInstance.get(`${ENDPOINT_MAP.posts}/${id}`);\nexport const creatPost = (data) =>\n  axiosInstance.post(ENDPOINT_MAP.posts, data, {\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\nexport const updatePost = (data) =>\n  axiosInstance.put(`${ENDPOINT_MAP.posts}/${data.id}`, data, {\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  });\nexport const deletePost = (id) => axiosInstance.delete(`${ENDPOINT_MAP.posts}/${id}`);\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\n\nimport { getAllPosts, getPost } from '../../api';\nimport { ALL_POSTS_REQUESTS, GET_ALL_POSTS, POST_REQUESTS, GET_POST } from './constants';\n\nexport const getAllPostsAction = () => ({\n  type: ALL_POSTS_REQUESTS,\n});\n\nexport const getPostAction = (id) => ({\n  type: POST_REQUESTS,\n  payload: id,\n});\n\nexport function* getAllPostsSaga() {\n  const posts = yield call(getAllPosts);\n\n  yield put({\n    type: GET_ALL_POSTS,\n    payload: posts.data,\n  });\n}\n\nexport function* getPostSaga(data) {\n  const post = yield call(getPost, data.payload);\n\n  yield put({\n    type: GET_POST,\n    payload: post.data,\n  });\n}\n\nexport function* postsSaga() {\n  yield all([\n    takeEvery(ALL_POSTS_REQUESTS, getAllPostsSaga),\n    takeEvery(POST_REQUESTS, getPostSaga),\n  ]);\n}\n","import { GET_ALL_POSTS, POST_REQUESTS, GET_POST } from './constants';\n\nconst initialState = {\n  loadding: false,\n  posts: [],\n  post: null,\n};\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_REQUESTS:\n      return { ...state, loadding: true, post: null };\n    case GET_ALL_POSTS:\n      return { ...state, posts: action.payload };\n    case GET_POST:\n      return { ...state, post: action.payload, loadding: false };\n\n    default:\n      return state;\n  }\n};\n","import { moduleName } from './constants';\n\nexport const postsSelector = (state) => state[moduleName].posts;\nexport const postSelector = (state) => state[moduleName].post;\nexport const postLoaddingSelector = (state) => state[moduleName].loadding;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useHeaderStyles = makeStyles((theme) => ({\n  header: {\n    backgroundColor: theme.colors.lightsalmon,\n  },\n  headerContainer: {\n    width: 1200,\n    height: 60,\n    margin: '0 auto',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  link: {\n    color: theme.colors.black,\n    textDecoration: 'none',\n  },\n  user: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    height: 30,\n    border: `2px solid ${theme.colors.black}`,\n    borderRadius: '50%',\n  },\n  linkContainer: {\n    width: 200,\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n}));\n","export const ROUTS = {\n  root: '/',\n  auth: '/auth',\n  posts: '/posts',\n  profile: '/profile',\n  create: '/create',\n};\n","export const moduleName = 'auth';\n\nexport const AUTH = `${moduleName}/AUTH`;\n","import { AUTH } from './constants';\n\nconst initialState = {\n  isAuth: false,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH:\n      return { isAuth: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { moduleName } from './constants';\n\nexport const authSelector = (state) => state[moduleName].isAuth;\n","import { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { useHeaderStyles } from './useHeaderStyles';\nimport { ROUTS } from '../../app.constants';\nimport { authSelector } from '../../store/auth';\n\nexport const Header = () => {\n  const classes = useHeaderStyles();\n  const isAuth = useSelector(authSelector);\n\n  return (\n    <div className={classes.header}>\n      <div className={classes.headerContainer}>\n        <div className={classes.linkContainer}>\n          <Link className={classes.link} to={ROUTS.root}>\n            <Typography variant=\"h6\">News</Typography>\n          </Link>\n          <Link className={classes.link} to={ROUTS.profile}>\n            <Typography variant=\"h6\">Profile</Typography>\n          </Link>\n        </div>\n        {isAuth ? (\n          <Typography className={classes.user} variant=\"body1\">\n            A\n          </Typography>\n        ) : (\n          <Link className={classes.link} to={ROUTS.auth}>\n            <Typography variant=\"body1\">Sign In</Typography>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useProstLinkStyles = makeStyles({\n  link: {\n    display: 'block',\n    padding: 10,\n  },\n});\n","import { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport { useProstLinkStyles } from './usePostLinkStyles';\n\nexport const PostLink = ({ title, id, url }) => {\n  const classes = useProstLinkStyles();\n\n  return (\n    <Link className={classes.link} to={`${url}/${id}`}>\n      <Typography variant=\"body1\">{title}</Typography>\n    </Link>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useNewsListStyles = makeStyles({\n  newsList: {\n    margin: '20px 0',\n  },\n});\n","import { useSelector } from 'react-redux';\n\nimport { PostLink } from '../../components/PostLink';\nimport { ROUTS } from '../../app.constants';\nimport { postsSelector } from '../../store/posts';\nimport { useNewsListStyles } from './useNewsListStyles';\n\nexport const NewsList = () => {\n  const posts = useSelector(postsSelector);\n  const classes = useNewsListStyles();\n\n  return (\n    <div className={classes.newsList}>\n      {posts.map(({ title, id }) => (\n        <PostLink key={id} title={title} id={id} url={ROUTS.posts} />\n      ))}\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useFormFieldStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n","import { TextField } from '@material-ui/core';\n\nimport { useFormFieldStyles } from './useFormFieldStyles';\n\nexport const FormField = ({ name, type = 'text', label, value = '', inputRef }) => {\n  const classes = useFormFieldStyles();\n\n  return (\n    <TextField\n      name={name}\n      type={type}\n      label={label}\n      defaultValue={value}\n      inputRef={inputRef}\n      className={classes.root}\n    />\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useAuthStyles = makeStyles((theme) => ({\n  auth: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 'calc(100vh - 60px)',\n  },\n  authContainer: {\n    width: 600,\n    height: 300,\n    padding: '60px 40px',\n    boxShadow: theme.colors.mainShadow,\n    boxSizing: 'border-box',\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'space-around',\n    height: '100%',\n  },\n  button: {\n    width: 140,\n    height: 50,\n    backgroundColor: theme.colors.lightsalmon,\n    border: 'none',\n    borderRadius: 20,\n    cursor: 'pointer',\n  },\n  error: {\n    width: '100%',\n    padding: '20px 0',\n    textAlign: 'center',\n    color: theme.colors.brown,\n  },\n}));\n","export const authMock = {\n  name: 'Admin',\n  password: '12345',\n};\n","import { useDispatch } from 'react-redux';\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { authAction } from '../../store/auth';\nimport { authMock } from '../../mocks';\nimport { ROUTS } from '../../app.constants';\n\nexport const useAuth = () => {\n  const dispatch = useDispatch();\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n  const onSubmit = ({ name, password }) => {\n    const isAuth = authMock.name === name && authMock.password === password;\n\n    if (!isAuth) {\n      setError('Invalid name or password');\n    } else {\n      setError(false);\n      dispatch(authAction(isAuth));\n      history.push(ROUTS.root);\n    }\n  };\n\n  return {\n    onSubmit,\n    error,\n  };\n};\n","import { AUTH } from './constants';\n\nexport const authAction = (payload) => ({\n  type: AUTH,\n  payload,\n});\n","import { Typography } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\n\nimport { FormField } from '../../components/FormField';\nimport { useAuthStyles } from './useAuthStyles';\nimport { useAuth } from './useAuth';\n\nexport const Auth = () => {\n  const classes = useAuthStyles();\n  const { register, handleSubmit } = useForm();\n  const { onSubmit, error } = useAuth();\n\n  return (\n    <div className={classes.auth}>\n      <div className={classes.authContainer}>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <FormField name=\"name\" label=\"Name\" inputRef={register({ required: true })} />\n          <FormField\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            inputRef={register({ required: true })}\n          />\n          {error && (\n            <Typography className={classes.error} variant=\"body1\">\n              {error}\n            </Typography>\n          )}\n          <button className={classes.button} type=\"submit\">\n            <Typography variant=\"button\">Sign In</Typography>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const usePostStyles = makeStyles({\n  title: {\n    padding: '20px 0',\n  },\n});\n","import { Typography } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { getPostAction, postSelector, postLoaddingSelector } from '../../store/posts';\nimport { usePostStyles } from './usePostStyles';\n\nexport const Post = () => {\n  const dispatch = useDispatch();\n  const classes = usePostStyles();\n  const { id } = useParams();\n  const post = useSelector(postSelector);\n  const isLoadding = useSelector(postLoaddingSelector);\n\n  useEffect(() => {\n    dispatch(getPostAction(id));\n  }, [dispatch, getPostAction]);\n\n  return isLoadding ? (\n    <Typography className={classes.title} variant=\"h6\">\n      Loadding\n    </Typography>\n  ) : (\n    <>\n      <Typography className={classes.title} variant=\"h4\">\n        {post?.title}\n      </Typography>\n      <Typography variant=\"body1\">{post?.body}</Typography>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useProfileStyles = makeStyles((theme) => ({\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '30px 0',\n  },\n  link: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 200,\n    height: 50,\n    color: theme.colors.white,\n    backgroundColor: theme.colors.lightsalmon,\n    border: 'none',\n    borderRadius: 20,\n    cursor: 'pointer',\n    textDecoration: 'none',\n  },\n}));\n","import { Link } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport { postsSelector } from '../../store/posts';\nimport { PostLink } from '../../components/PostLink';\nimport { ROUTS } from '../../app.constants';\nimport { useProfileStyles } from './useProfileStyles';\n\nexport const Profile = () => {\n  const posts = useSelector(postsSelector);\n  const classes = useProfileStyles();\n\n  return (\n    <div className={classes.profile}>\n      <div>\n        {posts.map(({ title, id }) => (\n          <PostLink key={id} title={title} id={id} url={ROUTS.profile} />\n        ))}\n      </div>\n      <Link className={classes.link} to={`${ROUTS.profile}${ROUTS.create}`}>\n        <Typography variant=\"button\">Create new post</Typography>\n      </Link>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useFormTextareaStyles = makeStyles({\n  textarea: {\n    width: '100%',\n    height: 80,\n  },\n});\n","import { useFormTextareaStyles } from './useFormTextareaStyles';\n\nexport const FormTextarea = ({ placeholder, value = '', name, inputRef }) => {\n  const classes = useFormTextareaStyles();\n\n  return (\n    <textarea\n      placeholder={placeholder}\n      defaultValue={value}\n      name={name}\n      ref={inputRef}\n      className={classes.textarea}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { getPostAction, postLoaddingSelector, postSelector } from '../../store/posts';\nimport { updatePost, creatPost, deletePost } from '../../api/api';\nimport { ROUTS } from '../../app.constants';\n\nexport const useEditor = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const post = useSelector(postSelector);\n  const isLoadding = useSelector(postLoaddingSelector);\n  const { register, handleSubmit } = useForm();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (Number(id)) {\n      dispatch(getPostAction(id));\n    }\n  }, [dispatch, id, getPostAction]);\n\n  const onSubmit = async ({ title, body }) => {\n    if (post) {\n      updatePost({ title, body, userId: post.userId, id: post.id });\n    } else {\n      creatPost({ title, body, userId: 1 });\n    }\n\n    history.push(ROUTS.posts);\n  };\n\n  const deletePostHandler = () => {\n    deletePost(id);\n    history.push(ROUTS.posts);\n  };\n\n  return {\n    isLoadding,\n    register: register({ required: true }),\n    handleSubmit: handleSubmit(onSubmit),\n    post,\n    isUpdate: Boolean(Number(id)),\n    deletePostHandler,\n  };\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useEditorStyles = makeStyles((theme) => ({\n  title: {\n    width: '100%',\n    padding: '20px 0',\n  },\n  button: {\n    display: 'block',\n    margin: '40px auto',\n    width: 140,\n    height: 50,\n    backgroundColor: theme.colors.lightsalmon,\n    border: 'none',\n    borderRadius: 20,\n    cursor: 'pointer',\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'space-between',\n    justifyContent: 'center',\n    height: 250,\n  },\n}));\n","import { Typography } from '@material-ui/core';\n\nimport { FormField } from '../../components/FormField';\nimport { FormTextarea } from '../../components/FormTextarea';\nimport { useEditor } from './useEditor';\nimport { useEditorStyles } from './useEditorStyles';\n\nexport const Editor = () => {\n  const classes = useEditorStyles();\n  const { register, handleSubmit, isLoadding, post, deletePostHandler, isUpdate } = useEditor();\n\n  return isLoadding ? (\n    <Typography className={classes.title} variant=\"h6\">\n      Loadding\n    </Typography>\n  ) : (\n    <div>\n      <Typography className={classes.title} variant=\"h4\">\n        Editor\n      </Typography>\n      <form onSubmit={handleSubmit} className={classes.form}>\n        <FormField\n          name=\"title\"\n          inputRef={register}\n          label=\"Title\"\n          value={isUpdate ? post?.title : ''}\n        />\n        <FormTextarea\n          placeholder=\"Your post\"\n          inputRef={register}\n          name=\"body\"\n          value={isUpdate ? post?.body : ''}\n        />\n        <button className={classes.button} type=\"submit\">\n          <Typography variant=\"button\">Update post</Typography>\n        </button>\n      </form>\n      {isUpdate && (\n        <button className={classes.button} type=\"submit\" onClick={deletePostHandler}>\n          <Typography variant=\"button\">Delete post</Typography>\n        </button>\n      )}\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useAppStyles = makeStyles({\n  main: {\n    width: 1100,\n    margin: '0 auto',\n  },\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport { getAllPostsAction } from './store/posts';\nimport { Header } from './components/Header';\nimport { NewsList } from './views/NewsList/NewsList';\nimport { Auth } from './views/Auth';\nimport { Post } from './views/Post/Post';\nimport { Profile } from './views/Profile';\nimport { ROUTS } from './app.constants';\nimport { authSelector } from './store/auth';\nimport { Editor } from './views/Editor/Editor';\nimport { useAppStyles } from './useAppStyles';\nimport './index.css';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(authSelector);\n  const classes = useAppStyles();\n\n  useEffect(() => {\n    dispatch(getAllPostsAction());\n  }, [dispatch, getAllPostsAction]);\n\n  return (\n    <>\n      <Header />\n      <div className={classes.main}>\n        <Switch>\n          <Route path={ROUTS.auth} component={Auth} />\n          <Route path={`${ROUTS.profile}/:id`}>\n            {isAuth ? <Editor /> : <Redirect to={ROUTS.auth} />}\n          </Route>\n          <Route path={ROUTS.profile}>{isAuth ? <Profile /> : <Redirect to={ROUTS.auth} />}</Route>\n          <Route path={`${ROUTS.posts}/:id`} component={Post} />\n          <Route path={[ROUTS.root, ROUTS.posts]} component={NewsList} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n","import { combineReducers } from 'redux';\nimport { postsReducer, moduleName as postsModule } from './posts';\nimport { authReducer, moduleName as authModule } from './auth';\n\nexport default combineReducers({\n  [postsModule]: postsReducer,\n  [authModule]: authReducer,\n});\n","import { all } from 'redux-saga/effects';\nimport { postsSaga } from './posts';\n\nexport default function* rootSaga() {\n  yield all([postsSaga()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducer';\nimport rootSaga from './root-saga';\n\nexport const initStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const enhancer = applyMiddleware(sagaMiddleware);\n  const store = createStore(reducer, enhancer);\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  colors: {\n    mainShadow: '0px 4px 16px rgba(39, 59, 97, 0.15)',\n    crimson: '#DC143C',\n    lightsalmon: '#FFA07A',\n    lime: '#00FF00',\n    green: '#008000',\n    aqua: '#00FFFF',\n    lightseagreen: '#20B2AA',\n    mediumblue: '#0000CD',\n    slateblue: '#6A5ACD',\n    fuchsia: '#FF00FF',\n    deeppink: '#FF1493',\n    chocolate: '#D2691E',\n    brown: '#A52A2A',\n    lightgray: '#D3D3D3',\n    gainsboro: '#DCDCDC',\n    white: '#ffffff',\n    black: '#000000',\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\n\nimport reportWebVitals from './reportWebVitals';\nimport { App } from './App';\nimport { initStore } from './store/store';\nimport { theme } from './theme';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={initStore()}>\n      <ThemeProvider theme={theme}>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </ThemeProvider>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}